class t{constructor(){this.x=0,this.y=0,this.scaleX=1,this.scaleY=1,this.skewX=0,this.skewY=0,this.rotation=0,this.matrix={a:1,b:0,c:0,d:1,tx:0,ty:0},this.matrixUpdated=!1,this.equalScale=!0,this.noScale=!0,this.equalSkew=!0,this.noSkew=!0}updateInfo(){this.equalScale=this.scaleX==this.scaleX,this.noScale=1==this.scaleX&&1==this.scaleY,this.equalSkew=this.skewX==this.skewY,this.noSkew=0===this.skewX&&0===this.skewY,this.equalSkew&&(this.rotation=this.skewX)}updateMatrix(){this.matrixUpdated||(this.matrix.a=this.scaleX*Math.cos(this.skewY),this.matrix.b=this.scaleX*Math.sin(this.skewY),this.matrix.c=this.scaleY*Math.sin(-this.skewX),this.matrix.d=this.scaleY*Math.cos(this.skewX),this.matrix.tx=this.x,this.matrix.ty=this.y,this.matrixUpdated=!0)}concat(t,s){if(s.noSkew&&s.noScale)this.x=t.x+s.x,this.y=t.y+s.y,this.scaleX=t.scaleX,this.scaleY=t.scaleY,this.skewX=t.skewX,this.skewY=t.skewY,this.matrixUpdated=!1;else if(s.equalScale&&s.noSkew)this.x=t.x*s.scaleX+s.x,this.y=t.y*s.scaleY+s.y,this.scaleX=t.scaleX*s.scaleX,this.scaleY=t.scaleY*s.scaleY,this.skewX=t.skewX,this.skewY=t.skewY,this.matrixUpdated=!1;else if(s.equalSkew&&s.noScale){const e=Math.sin(s.skewX),i=Math.cos(s.skewY),h=t.x*i-t.y*e,a=t.x*e+t.y*i;this.x=h*s.scaleX+s.x,this.y=a*s.scaleY+s.y,this.skewX=t.skewX+s.skewX,this.skewY=t.skewY+s.skewY,this.scaleX=t.scaleX*s.scaleX,this.scaleY=t.scaleY*s.scaleY,this.matrixUpdated=!1}else{t.updateMatrix(),s.updateMatrix();const e=t.matrix,i=s.matrix;this.matrix.a=e.a*i.a+e.b*i.c,this.matrix.c=e.c*i.a+e.d*i.c,this.matrix.tx=e.tx*i.a+e.ty*i.c+i.tx,this.matrix.b=e.a*i.b+e.b*i.d,this.matrix.d=e.c*i.b+e.d*i.d,this.matrix.ty=e.tx*i.b+e.ty*i.d+i.ty,this.x=this.matrix.tx,this.y=this.matrix.ty,this.scaleX=Math.sqrt(this.matrix.a*this.matrix.a+this.matrix.b*this.matrix.b),this.scaleY=Math.sqrt(this.matrix.c*this.matrix.c+this.matrix.d*this.matrix.d),this.skewX=Math.atan2(-this.matrix.c,this.matrix.d),this.skewY=Math.atan2(this.matrix.b,this.matrix.a),this.matrixUpdated=!0}this.updateInfo()}copy(t){this.x=t.x,this.y=t.y,this.scaleX=t.scaleX,this.scaleY=t.scaleY,this.skewX=t.skewX,this.skewY=t.skewY,this.rotation=t.rotation,this.matrixUpdated=!1,this.updateInfo()}}class s{constructor(s){return this.transform={local:new t,global:new t,globalTransformUpdated:!1},this.children=[],this.hierarchy=[],this.parent=null,this.name=s||"node",this}set x(t){this.transform.local.x!==t&&(this.transform.local.x=t,this.transform.local.matrixUpdated=!1,this.poke())}get x(){return this.transform.local.x}set y(t){this.transform.local.y!==t&&(this.transform.local.y=t,this.transform.local.matrixUpdated=!1,this.poke())}get y(){return this.transform.local.y}set scaleX(t){this.transform.local.scaleX!==t&&(this.transform.local.scaleX=t,this.transform.local.matrixUpdated=!1,this.poke())}get scaleX(){return this.transform.local.scaleX}set scaleY(t){this.transform.local.scaleY!==t&&(this.transform.local.scaleY=t,this.transform.local.matrixUpdated=!1,this.poke())}get scaleY(){return this.transform.local.scaleY}set skewX(t){this.transform.local.skewX!==t&&(this.transform.local.rotation=this.transform.local.skewY===this.transform.local.skewX?this.transform.local.skewX:0,this.transform.local.skewX=t,this.transform.local.matrixUpdated=!1,this.poke())}get skewX(){return this.transform.local.skewX}set skewY(t){this.transform.local.skewY!==t&&(this.transform.local.rotation=this.transform.local.skewY===this.transform.local.skewX?this.transform.local.skewX:0,this.transform.local.skewY=t,this.transform.local.matrixUpdated=!1,this.poke())}get skewY(){return this.transform.local.skewY}set rotation(t){const s=t%360;this.transform.local.rotation!==s&&(this.transform.local.skewX=this.transform.local.skewY=t*Math.PI/180,this.transform.local.rotation=s,this.transform.local.matrixUpdated=!1,this.poke())}get rotation(){return this.transform.local.rotation}setPosition(t=0,s){this.x=t,this.y=s}setScale(t=1,s){s=s||t,this.scaleX=t,this.scaleY=s}setSkew(t=0,s){this.skewX=t,this.skewY=s}addChild(t){return t.parent&&t.parent.removeChild(t),t.parent=this,t.updateHierarchy(),this.children.push(t),t}removeChild(t){for(let s=0;s<this.children.length;s++)this.children[s]===t&&this.children.splice(s,1);this.parent?this.parent.removeChild(t):(t.parent=null,t.updateHierarchy())}updateHierarchy(){this.hierarchy.length=0;let t=this;for(;t.parent;)t=t.parent,this.hierarchy.unshift(t);for(let t=0;t<this.children.length;t++)this.children[t].updateHierarchy();this.poke()}poke(){this.transform.globalTransformUpdated=!1}updateHierarchyGlobalTransform(){let t=!1;for(let s=0;s<this.hierarchy.length;s++){const e=this.hierarchy[s];t=t||!e.transform.globalTransformUpdated,e.updateGlobalTransform(t)}return t}pokeChildren(t){for(let s=0;s<this.children.length;s++){const e=this.children[s];(t=t||!e.transform.globalTransformUpdated)&&(e.poke(),e.pokeChildren(t))}}updateGlobalTransform(t){return(t=t||!this.transform.globalTransformUpdated)&&this.updateTransformData(),t}updateTransformData(){this.parent?this.transform.global.concat(this.transform.local,this.parent.transform.global):this.transform.global.copy(this.transform.local),this.transform.globalTransformUpdated=!0}kill(){this.children.forEach((t=>t.parent=null)),this.children.length=0,this.hierarchy.length=0,this.parent&&this.parent.removeChild(this),this.parent=null}}class e extends s{constructor(t,s){super("sprite"),this.texture=null,this.bounds=null,this.anchor={x:0,y:0},this.mesh=null,this.display={visible:!0,alpha:1},t&&this.setTexture(t,s)}set width(t){this.texture&&(this.scaleX=t/this.texture.rect.width)}get width(){return this.texture?this.texture.rect.width*this.scaleX:0}set height(t){this.texture&&(this.scaleY=t/this.texture.rect.height)}get height(){return this.texture?this.texture.rect.height*this.scaleY:0}set visible(t){this.display.visible=t}get visible(){return this.display.visible}set alpha(t){this.display.alpha=Math.min(1,Math.max(0,t))}get alpha(){return this.display.alpha}set anchorX(t){this.anchor.x=Math.min(1,Math.max(0,t)),this.mesh&&(this.mesh.meshUpdated=!1)}get anchorX(){return this.anchor.x}set anchorY(t){this.anchor.y=Math.min(1,Math.max(0,t)),this.mesh&&(this.mesh.meshUpdated=!1)}get anchorY(){return this.anchor.y}setAnchor(t=0,s){s=s||t,this.anchorX=t,this.anchorY=s}setBlendMode(t){this.display.blend=t}getBlendMode(){return this.display.blend}setTint(t,s=.5){const e=(t>>16)/255,i=(t>>8&255)/255,h=(255&t)/255;void 0===this.display.tint?this.display.tint=[e,i,h,s]:(this.display.tint[0]=e,this.display.tint[1]=i,this.display.tint[2]=h,this.display.tint[3]=s)}getTint(){return this.display.tint}setTexture(t,s){this.texture||(this.texture={}),this.texture.img=t,s?this.setFrame(s):this.setFrame({x:0,y:0,width:t.width,height:t.height})}getTexture(){return this.texture?this.texture.img:null}setFrame(t){this.texture&&(this.texture.rect=t,this.mesh&&(this.mesh.meshUpdated=!1),this.bounds&&(this.bounds.boundsUpdated=!1))}getMesh(){return this.updateMesh(),this.mesh}updateMesh(){if(this.texture&&(this.mesh||(this.mesh={meshUpdated:!1}),!this.mesh.meshUpdated)){const t=this.texture.rect,s=t.width*this.anchor.x,e=t.height*this.anchor.y;this.mesh.vertexes=[-s,e,t.width-s,e,t.width-s,-t.height+e,-s,-t.height+e];const i=t.x/this.texture.img.width,h=t.y/this.texture.img.height,a=(t.x+t.width)/this.texture.img.width,r=(t.y+t.height)/this.texture.img.height;this.mesh.uv=[i,h,a,h,a,r,i,r],this.mesh.meshUpdated=!0}}updateBounds(){if(!(!this.visible||this.bounds&&this.bounds.boundsUpdated)&&this.texture){this.bounds||(this.bounds={rect:{x:0,y:0,width:0,height:0}});const t=this.width,s=this.height,e=Math.cos(this.transform.global.skewY)*t,i=Math.sin(this.transform.global.skewY)*t,h=Math.cos(this.transform.global.skewX+.5*Math.PI)*s,a=Math.sin(this.transform.global.skewX+.5*Math.PI)*s,r=e+h,l=i+a,n=Math.min(0,Math.min(e,Math.min(h,r))),o=Math.min(0,Math.min(i,Math.min(a,l))),d=Math.max(0,Math.max(e,Math.max(h,r))),c=Math.max(0,Math.max(i,Math.max(a,l)));this.bounds.rect.x=this.transform.global.x+n-r*this.anchor.x,this.bounds.rect.y=this.transform.global.y+o-l*this.anchor.y,this.bounds.rect.width=d-n,this.bounds.rect.height=c-o,this.bounds.boundsUpdated=!0}}updateTransformData(){super.updateTransformData(),this.bounds&&(this.bounds.boundsUpdated=!1)}getBounds(){let t=this.updateHierarchyGlobalTransform();return t=this.updateGlobalTransform(t),this.pokeChildren(t),this.updateBounds(),this.bounds?this.bounds.rect:null}}class i{constructor(t){this.vertexOffset=0,this.indexOffset=0,this.textures={},this.vs=null,this.fs=null,this.program=null,this.vec2UniformLoc=null,this.indexBuffer=null,this.vertBuffer=null,this.currentBlendMode=i.BLEND_MODE.NORMAL,this.blendModes={},this.defaultTint=[0,0,0,0],this.canvas=t,this.stage=new s("stage"),this.sceneWidth=this.canvas.width,this.sceneHeight=this.canvas.height,this.vertexData=new Float32Array(6e6),this.indexData=new Uint16Array(6e5);for(let t=0;t<1e5;t++){let s=6*t,e=4*t;this.indexData[s++]=e,this.indexData[s++]=e+3,this.indexData[s++]=e+1,this.indexData[s++]=e+2,this.indexData[s++]=e+1,this.indexData[s++]=e+3}if(this.gl=this.createContext(),this.gl){this.blendModes[i.BLEND_MODE.NORMAL]=[this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA],this.blendModes[i.BLEND_MODE.ADD]=[this.gl.ONE,this.gl.ONE],this.blendModes[i.BLEND_MODE.MULTIPLY]=[this.gl.DST_COLOR,this.gl.ONE_MINUS_SRC_ALPHA],this.gl.viewport(0,0,this.sceneWidth,this.sceneHeight),this.gl.clearColor(0,0,0,1),this.gl.enable(this.gl.BLEND),this.gl.blendEquation(this.gl.FUNC_ADD),this.gl.blendFunc(this.blendModes[i.BLEND_MODE.NORMAL][0],this.blendModes[i.BLEND_MODE.NORMAL][1]),this.gl.disable(this.gl.DEPTH_TEST),this.gl.disable(this.gl.CULL_FACE),this.gl.disable(this.gl.STENCIL_TEST),this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),this.vertexShader=["uniform vec2 uRatio;","attribute vec4 aPos;","attribute vec4 aTrans;","attribute vec4 aTint;","attribute vec3 aTex;","varying vec2 vTextureCoord;","varying float vAlpha;","varying vec4 vTint;","void main() {","float a = (aTrans.x * cos(aTrans.w)) * uRatio.x;","float c = (aTrans.y * sin(-aTrans.z)) * -uRatio.x;","float b = (aTrans.x * sin(aTrans.w)) * -uRatio.y;","float d = (aTrans.y * cos(aTrans.z)) * uRatio.y;","float tx = aPos.z * uRatio.x - 1.0;","float ty = aPos.w * -uRatio.y + 1.0;","mat3 outMatrix = mat3(a, b, 0.0, c, d, 0.0, tx, ty, 1.0);","gl_Position = vec4(outMatrix * vec3(aPos.xy, 1.0), 1.0);","vTextureCoord = aTex.xy;","vAlpha = aTex.z;","vTint = aTint;","}"].join("\n"),this.fragmentShader=["precision mediump float;","uniform sampler2D uImage;","uniform vec4 uClip;","varying vec2 vTextureCoord;","varying float vAlpha;","varying vec4 vTint;","void main() {","vec4 color = texture2D(uImage, vTextureCoord);","gl_FragColor = vec4(mix(color.rgb, vTint.rgb, vTint.a) * color.a * vAlpha, 0);","}"].join("\n"),this.vs=this.gl.createShader(this.gl.VERTEX_SHADER),this.gl.shaderSource(this.vs,this.vertexShader),this.gl.compileShader(this.vs),this.fs=this.gl.createShader(this.gl.FRAGMENT_SHADER),this.gl.shaderSource(this.fs,this.fragmentShader),this.gl.compileShader(this.fs),this.program=this.gl.createProgram(),this.gl.attachShader(this.program,this.vs),this.gl.attachShader(this.program,this.fs),this.gl.linkProgram(this.program),this.gl.useProgram(this.program),this.vec2UniformLoc=this.gl.getUniformLocation(this.program,"uRatio"),this.gl.uniform2f(this.vec2UniformLoc,2/this.sceneWidth,2/this.sceneHeight);const t=this.gl.getAttribLocation(this.program,"aPos");this.gl.enableVertexAttribArray(t);const s=this.gl.getAttribLocation(this.program,"aTex");this.gl.enableVertexAttribArray(s);const e=this.gl.getAttribLocation(this.program,"aTrans");this.gl.enableVertexAttribArray(e);const h=this.gl.getAttribLocation(this.program,"aTint");this.gl.enableVertexAttribArray(h),this.indexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.indexData,this.gl.STATIC_DRAW),this.vertBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertBuffer),this.gl.vertexAttribPointer(t,4,this.gl.FLOAT,!1,60,0),this.gl.vertexAttribPointer(e,4,this.gl.FLOAT,!1,60,16),this.gl.vertexAttribPointer(h,4,this.gl.FLOAT,!1,60,32),this.gl.vertexAttribPointer(s,3,this.gl.FLOAT,!1,60,48)}}resize(t,s){this.sceneWidth===t&&this.sceneHeight===s||(this.sceneWidth=this.canvas.width=t,this.sceneHeight=this.canvas.height=s,this.gl&&(this.gl.viewport(0,0,this.sceneWidth,this.sceneHeight),this.vec2UniformLoc&&this.gl.uniform2f(this.vec2UniformLoc,2/this.sceneWidth,2/this.sceneHeight)))}createContext(){const t=["webgl","experimental-webgl","moz-webgl","webkit-3d"];let s=null;for(let e=0;e<t.length&&(s=this.canvas.getContext(t[e],{alpha:!1,premultipliedAlpha:!1}),!s);e++);return s}addTexture(t){if(t.id||console.warn("no texture id",t),this.gl)if(this.textures[t.id])this.gl.bindTexture(this.gl.TEXTURE_2D,this.textures[t.id]);else{const s=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,s),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.textures[t.id]=s}else console.warn("addTexture error: no webgl contex")}present(){if(this.gl){for(let t=0;t<this.stage.children.length;t++)this.draw(this.stage.children[t]);this.drawTriangles()}}draw(t,s,e,h,a){if(!t.visible)return;s=(s||1)*t.alpha,e=t.getTint()||e||this.defaultTint,h=t.getBlendMode()||h||i.BLEND_MODE.NORMAL,a=t.updateGlobalTransform(a);const r=t.getTexture();if(r){if(this.currentTexture!==r&&(this.drawTriangles(),this.addTexture(r),this.currentTexture=r),this.indexOffset>=this.indexData.length&&this.drawTriangles(),this.currentBlendMode!==h){this.drawTriangles(),this.blendModes[h]?this.currentBlendMode=h:(console.warn(`blend mode error: "${h}" is not valid blend mode.`),this.currentBlendMode=i.BLEND_MODE.NORMAL);const t=this.blendModes[this.currentBlendMode];t.length>2?this.gl.blendFuncSeparate(t[0],t[1],t[2],t[3]):this.gl.blendFunc(t[0],t[1])}const a=t.getMesh(),l=a.vertexes,n=a.uv,o=t.transform.global;for(let t=0;t<l.length;t+=2)this.vertexData[this.vertexOffset++]=l[t],this.vertexData[this.vertexOffset++]=l[t+1],this.vertexData[this.vertexOffset++]=o.x,this.vertexData[this.vertexOffset++]=o.y,this.vertexData[this.vertexOffset++]=o.scaleX,this.vertexData[this.vertexOffset++]=o.scaleY,this.vertexData[this.vertexOffset++]=o.skewX,this.vertexData[this.vertexOffset++]=o.skewY,this.vertexData[this.vertexOffset++]=e[0],this.vertexData[this.vertexOffset++]=e[1],this.vertexData[this.vertexOffset++]=e[2],this.vertexData[this.vertexOffset++]=e[3],this.vertexData[this.vertexOffset++]=n[t],this.vertexData[this.vertexOffset++]=n[t+1],this.vertexData[this.vertexOffset++]=s;this.indexOffset+=6}for(let i=0;i<t.children.length;i++)this.draw(t.children[i],s,e,h,a)}drawTriangles(){this.gl&&(this.indexOffset>0&&(this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertexData.subarray(0,this.vertexOffset),this.gl.STATIC_DRAW),this.gl.drawElements(this.gl.TRIANGLES,this.indexOffset,this.gl.UNSIGNED_SHORT,0)),this.vertexOffset=0,this.indexOffset=0)}}i.BLEND_MODE={NORMAL:"normal",ADD:"add",MULTIPLY:"multiply"};class h{constructor(t){return this.onEnterFrame=t,this.oldTime=Date.now(),this}start(){this.oldTime=Date.now(),this.onRequestAnimationFrame()}stop(){cancelAnimationFrame(this.requestAnimationFrameId)}onRequestAnimationFrame(){const t=Date.now()-this.oldTime;this.requestAnimationFrameId=requestAnimationFrame(this.onRequestAnimationFrame.bind(this)),this.oldTime+=t,this.onEnterFrame(t)}}export{s as Node,i as Renderer,e as Sprite,h as Timer,t as Transform};
//# sourceMappingURL=dizzy-canvas.min.js.map
