{"version":3,"file":"dizzy-canvas.min.js","sources":["../src/Transform.js","../src/Node.js","../src/Sprite.js","../src/Renderer.js","../src/Timer.js"],"sourcesContent":["export default class Transform {\r\n    constructor() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.scaleX = 1;\r\n        this.scaleY = 1;\r\n        this.skewX = 0;\r\n        this.skewY = 0;\r\n        this.rotation = 0;\r\n        this.matrix = { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 };\r\n        this.matrixUpdated = false;\r\n        this.equalScale = true;\r\n        this.noScale = true;\r\n        this.equalSkew = true;\r\n        this.noSkew = true;\r\n    }\r\n    updateInfo() {\r\n        this.equalScale = (this.scaleX == this.scaleX);\r\n        this.noScale = (this.scaleX == 1 && this.scaleY == 1);\r\n        this.equalSkew = (this.skewX == this.skewY);\r\n        this.noSkew = (this.skewX === 0 && this.skewY === 0);\r\n        if (this.equalSkew) {\r\n            this.rotation = this.skewX;\r\n        }\r\n    }\r\n    updateMatrix() {\r\n        if (!this.matrixUpdated) {\r\n            this.matrix.a = this.scaleX * Math.cos(this.skewY);\r\n            this.matrix.b = this.scaleX * Math.sin(this.skewY);\r\n            this.matrix.c = this.scaleY * Math.sin(-this.skewX);\r\n            this.matrix.d = this.scaleY * Math.cos(this.skewX);\r\n            this.matrix.tx = this.x;\r\n            this.matrix.ty = this.y;\r\n            this.matrixUpdated = true;\r\n        }\r\n    }\r\n    concat(local, global) {\r\n        if (global.noSkew && global.noScale) {\r\n            this.x = local.x + global.x;\r\n            this.y = local.y + global.y;\r\n            this.scaleX = local.scaleX;\r\n            this.scaleY = local.scaleY;\r\n            this.skewX = local.skewX;\r\n            this.skewY = local.skewY;\r\n            this.matrixUpdated = false;\r\n        }\r\n        else if (global.equalScale && global.noSkew) {\r\n            this.x = local.x * global.scaleX + global.x;\r\n            this.y = local.y * global.scaleY + global.y;\r\n            this.scaleX = local.scaleX * global.scaleX;\r\n            this.scaleY = local.scaleY * global.scaleY;\r\n            this.skewX = local.skewX;\r\n            this.skewY = local.skewY;\r\n            this.matrixUpdated = false;\r\n        }\r\n        else if (global.equalSkew && global.noScale) {\r\n            const sin = Math.sin(global.skewX);\r\n            const cos = Math.cos(global.skewY);\r\n            const posX = local.x * cos - local.y * sin;\r\n            const posY = local.x * sin + local.y * cos;\r\n            this.x = posX * global.scaleX + global.x;\r\n            this.y = posY * global.scaleY + global.y;\r\n            this.skewX = local.skewX + global.skewX;\r\n            this.skewY = local.skewY + global.skewY;\r\n            this.scaleX = local.scaleX * global.scaleX;\r\n            this.scaleY = local.scaleY * global.scaleY;\r\n            this.matrixUpdated = false;\r\n        }\r\n        else {\r\n            local.updateMatrix();\r\n            global.updateMatrix();\r\n            const m1 = local.matrix;\r\n            const m2 = global.matrix;\r\n            this.matrix.a = m1.a * m2.a + m1.b * m2.c;\r\n            this.matrix.c = m1.c * m2.a + m1.d * m2.c;\r\n            this.matrix.tx = m1.tx * m2.a + m1.ty * m2.c + m2.tx;\r\n            this.matrix.b = m1.a * m2.b + m1.b * m2.d;\r\n            this.matrix.d = m1.c * m2.b + m1.d * m2.d;\r\n            this.matrix.ty = m1.tx * m2.b + m1.ty * m2.d + m2.ty;\r\n            this.x = this.matrix.tx;\r\n            this.y = this.matrix.ty;\r\n            this.scaleX = Math.sqrt(this.matrix.a * this.matrix.a + this.matrix.b * this.matrix.b);\r\n            this.scaleY = Math.sqrt(this.matrix.c * this.matrix.c + this.matrix.d * this.matrix.d);\r\n            this.skewX = Math.atan2(-this.matrix.c, this.matrix.d);\r\n            this.skewY = Math.atan2(this.matrix.b, this.matrix.a);\r\n            this.matrixUpdated = true;\r\n        }\r\n        this.updateInfo();\r\n    }\r\n    copy(target) {\r\n        this.x = target.x;\r\n        this.y = target.y;\r\n        this.scaleX = target.scaleX;\r\n        this.scaleY = target.scaleY;\r\n        this.skewX = target.skewX;\r\n        this.skewY = target.skewY;\r\n        this.rotation = target.rotation;\r\n        this.matrixUpdated = false;\r\n        this.updateInfo();\r\n    }\r\n}\r\n","import Transform from \"./Transform\";\r\nclass Node {\r\n    constructor(id) {\r\n        this.transform = { local: new Transform(), global: new Transform(), globalTransformUpdated: false };\r\n        this.children = [];\r\n        this.hierarchy = [];\r\n        this.parent = null;\r\n        this.name = id || \"node\";\r\n        return this;\r\n    }\r\n    set x(value) {\r\n        if (this.transform.local.x !== value) {\r\n            this.transform.local.x = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get x() {\r\n        return this.transform.local.x;\r\n    }\r\n    set y(value) {\r\n        if (this.transform.local.y !== value) {\r\n            this.transform.local.y = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get y() {\r\n        return this.transform.local.y;\r\n    }\r\n    set scaleX(value) {\r\n        if (this.transform.local.scaleX !== value) {\r\n            this.transform.local.scaleX = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get scaleX() {\r\n        return this.transform.local.scaleX;\r\n    }\r\n    set scaleY(value) {\r\n        if (this.transform.local.scaleY !== value) {\r\n            this.transform.local.scaleY = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get scaleY() {\r\n        return this.transform.local.scaleY;\r\n    }\r\n    set skewX(value) {\r\n        if (this.transform.local.skewX !== value) {\r\n            this.transform.local.rotation = this.transform.local.skewY === this.transform.local.skewX ? this.transform.local.skewX : 0;\r\n            this.transform.local.skewX = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get skewX() {\r\n        return this.transform.local.skewX;\r\n    }\r\n    set skewY(value) {\r\n        if (this.transform.local.skewY !== value) {\r\n            this.transform.local.rotation = this.transform.local.skewY === this.transform.local.skewX ? this.transform.local.skewX : 0;\r\n            this.transform.local.skewY = value;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get skewY() {\r\n        return this.transform.local.skewY;\r\n    }\r\n    set rotation(value) {\r\n        const rotation = value % 360;\r\n        if (this.transform.local.rotation !== rotation) {\r\n            this.transform.local.skewX = this.transform.local.skewY = value * Math.PI / 180;\r\n            this.transform.local.rotation = rotation;\r\n            this.transform.local.matrixUpdated = false;\r\n            this.poke();\r\n        }\r\n    }\r\n    get rotation() {\r\n        return this.transform.local.rotation;\r\n    }\r\n    setPosition(x = 0, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    setScale(x = 1, y) {\r\n        y = y || x;\r\n        this.scaleX = x;\r\n        this.scaleY = y;\r\n    }\r\n    setSkew(x = 0, y) {\r\n        this.skewX = x;\r\n        this.skewY = y;\r\n    }\r\n    addChild(node) {\r\n        if (node.parent) {\r\n            node.parent.removeChild(node);\r\n        }\r\n        node.parent = this;\r\n        node.updateHierarchy();\r\n        this.children.push(node);\r\n        return node;\r\n    }\r\n    removeChild(node) {\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] === node) {\r\n                this.children.splice(i, 1);\r\n            }\r\n        }\r\n        if (this.parent) {\r\n            this.parent.removeChild(node);\r\n        }\r\n        else {\r\n            node.parent = null;\r\n            node.updateHierarchy();\r\n        }\r\n    }\r\n    updateHierarchy() {\r\n        this.hierarchy.length = 0;\r\n        let node = this;\r\n        while (true) {\r\n            if (node.parent) {\r\n                node = node.parent;\r\n                this.hierarchy.unshift(node);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            this.children[i].updateHierarchy();\r\n        }\r\n        this.poke();\r\n    }\r\n    poke() {\r\n        this.transform.globalTransformUpdated = false;\r\n    }\r\n    updateHierarchyGlobalTransform() {\r\n        let poked = false;\r\n        for (let i = 0; i < this.hierarchy.length; i++) {\r\n            const node = this.hierarchy[i];\r\n            poked = poked || !node.transform.globalTransformUpdated;\r\n            node.updateGlobalTransform(poked);\r\n        }\r\n        return poked;\r\n    }\r\n    pokeChildren(poked) {\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            const node = this.children[i];\r\n            poked = poked || !node.transform.globalTransformUpdated;\r\n            if (poked) {\r\n                node.poke();\r\n                node.pokeChildren(poked);\r\n            }\r\n        }\r\n    }\r\n    updateGlobalTransform(poked) {\r\n        poked = poked || !this.transform.globalTransformUpdated;\r\n        if (poked) {\r\n            this.updateTransformData();\r\n        }\r\n        return poked;\r\n    }\r\n    updateTransformData() {\r\n        if (this.parent) {\r\n            this.transform.global.concat(this.transform.local, this.parent.transform.global);\r\n        }\r\n        else {\r\n            this.transform.global.copy(this.transform.local);\r\n        }\r\n        this.transform.globalTransformUpdated = true;\r\n    }\r\n    kill() {\r\n        this.children.forEach(children => children.parent = null);\r\n        this.children.length = 0;\r\n        this.hierarchy.length = 0;\r\n        if (this.parent) {\r\n            this.parent.removeChild(this);\r\n        }\r\n        this.parent = null;\r\n    }\r\n}\r\nexport default Node;\r\n","import Node from \"./Node\";\r\nexport default class Sprite extends Node {\r\n    constructor(texture, frame) {\r\n        super(\"sprite\");\r\n        this.texture = null;\r\n        this.bounds = null;\r\n        this.anchor = { x: 0, y: 0 };\r\n        this.mesh = null;\r\n        this.display = { visible: true, alpha: 1 };\r\n        if (texture) {\r\n            this.setTexture(texture, frame);\r\n        }\r\n    }\r\n    set width(value) {\r\n        if (this.texture) {\r\n            this.scaleX = value / this.texture.rect.width;\r\n        }\r\n    }\r\n    get width() {\r\n        return this.texture ? this.texture.rect.width * this.scaleX : 0;\r\n    }\r\n    set height(value) {\r\n        if (this.texture) {\r\n            this.scaleY = value / this.texture.rect.height;\r\n        }\r\n    }\r\n    get height() {\r\n        return this.texture ? this.texture.rect.height * this.scaleY : 0;\r\n    }\r\n    set visible(value) {\r\n        this.display.visible = value;\r\n    }\r\n    get visible() {\r\n        return this.display.visible;\r\n    }\r\n    set alpha(value) {\r\n        this.display.alpha = Math.min(1, Math.max(0, value));\r\n    }\r\n    get alpha() {\r\n        return this.display.alpha;\r\n    }\r\n    set anchorX(value) {\r\n        this.anchor.x = Math.min(1, Math.max(0, value));\r\n        if (this.mesh) {\r\n            this.mesh.meshUpdated = false;\r\n        }\r\n    }\r\n    get anchorX() {\r\n        return this.anchor.x;\r\n    }\r\n    set anchorY(value) {\r\n        this.anchor.y = Math.min(1, Math.max(0, value));\r\n        if (this.mesh) {\r\n            this.mesh.meshUpdated = false;\r\n        }\r\n    }\r\n    get anchorY() {\r\n        return this.anchor.y;\r\n    }\r\n    setAnchor(x = 0, y) {\r\n        y = y || x;\r\n        this.anchorX = x;\r\n        this.anchorY = y;\r\n    }\r\n    setBlendMode(value) {\r\n        this.display.blend = value;\r\n    }\r\n    getBlendMode() {\r\n        return this.display.blend;\r\n    }\r\n    setTint(color, alpha = 0.5) {\r\n        const r = (color >> 16) / 255;\r\n        const g = (color >> 8 & 0xff) / 255;\r\n        const b = (color & 0xff) / 255;\r\n        if (this.display.tint === undefined) {\r\n            this.display.tint = [r, g, b, alpha];\r\n        }\r\n        else {\r\n            this.display.tint[0] = r;\r\n            this.display.tint[1] = g;\r\n            this.display.tint[2] = b;\r\n            this.display.tint[3] = alpha;\r\n        }\r\n    }\r\n    getTint() {\r\n        return this.display.tint;\r\n    }\r\n    setTexture(img, frame) {\r\n        if (!this.texture) {\r\n            this.texture = {};\r\n        }\r\n        this.texture.img = img;\r\n        if (frame) {\r\n            this.setFrame(frame);\r\n        }\r\n        else {\r\n            this.setFrame({ x: 0, y: 0, width: img.width, height: img.height });\r\n        }\r\n    }\r\n    getTexture() {\r\n        return this.texture ? this.texture.img : null;\r\n    }\r\n    setFrame(rect) {\r\n        if (!this.texture) {\r\n            return;\r\n        }\r\n        this.texture.rect = rect;\r\n        if (this.mesh) {\r\n            this.mesh.meshUpdated = false;\r\n        }\r\n        if (this.bounds) {\r\n            this.bounds.boundsUpdated = false;\r\n        }\r\n    }\r\n    getMesh() {\r\n        this.updateMesh();\r\n        return this.mesh;\r\n    }\r\n    updateMesh() {\r\n        if (!this.texture) {\r\n            return;\r\n        }\r\n        if (!this.mesh) {\r\n            this.mesh = { meshUpdated: false };\r\n        }\r\n        if (!this.mesh.meshUpdated) {\r\n            const rect = this.texture.rect;\r\n            const offsetX = rect.width * this.anchor.x;\r\n            const offsetY = rect.height * this.anchor.y;\r\n            this.mesh.vertexes = [\r\n                -offsetX, offsetY,\r\n                rect.width - offsetX, offsetY,\r\n                rect.width - offsetX, -rect.height + offsetY,\r\n                -offsetX, -rect.height + offsetY\r\n            ];\r\n            const uv0 = rect.x / this.texture.img.width;\r\n            const uv1 = rect.y / this.texture.img.height;\r\n            const uv2 = (rect.x + rect.width) / this.texture.img.width;\r\n            const uv3 = (rect.y + rect.height) / this.texture.img.height;\r\n            this.mesh.uv = [uv0, uv1, uv2, uv1, uv2, uv3, uv0, uv3];\r\n            this.mesh.meshUpdated = true;\r\n        }\r\n    }\r\n    updateBounds() {\r\n        if (!this.visible || (this.bounds && this.bounds.boundsUpdated)) {\r\n            return;\r\n        }\r\n        if (this.texture) {\r\n            if (!this.bounds) {\r\n                this.bounds = { rect: { x: 0, y: 0, width: 0, height: 0 } };\r\n            }\r\n            const w = this.width;\r\n            const h = this.height;\r\n            const vec1X = Math.cos(this.transform.global.skewY) * w;\r\n            const vec1Y = Math.sin(this.transform.global.skewY) * w;\r\n            const vec2X = Math.cos(this.transform.global.skewX + Math.PI * 0.5) * h;\r\n            const vec2Y = Math.sin(this.transform.global.skewX + Math.PI * 0.5) * h;\r\n            const vec3X = vec1X + vec2X;\r\n            const vec3Y = vec1Y + vec2Y;\r\n            const minX = Math.min(0, Math.min(vec1X, Math.min(vec2X, vec3X)));\r\n            const minY = Math.min(0, Math.min(vec1Y, Math.min(vec2Y, vec3Y)));\r\n            const maxX = Math.max(0, Math.max(vec1X, Math.max(vec2X, vec3X)));\r\n            const maxY = Math.max(0, Math.max(vec1Y, Math.max(vec2Y, vec3Y)));\r\n            this.bounds.rect.x = this.transform.global.x + minX - vec3X * this.anchor.x;\r\n            this.bounds.rect.y = this.transform.global.y + minY - vec3Y * this.anchor.y;\r\n            this.bounds.rect.width = maxX - minX;\r\n            this.bounds.rect.height = maxY - minY;\r\n            this.bounds.boundsUpdated = true;\r\n        }\r\n    }\r\n    updateTransformData() {\r\n        super.updateTransformData();\r\n        if (this.bounds) {\r\n            this.bounds.boundsUpdated = false;\r\n        }\r\n    }\r\n    getBounds() {\r\n        let poked = this.updateHierarchyGlobalTransform();\r\n        poked = this.updateGlobalTransform(poked);\r\n        this.pokeChildren(poked);\r\n        this.updateBounds();\r\n        return this.bounds ? this.bounds.rect : null;\r\n    }\r\n}\r\n","import Node from \"./Node\";\r\nconst MAX_SPRITES = 100000;\r\nconst VERTEX_DATA_LENGTH = (4 + 4 + 4 + 3) * 4;\r\nconst INDEX_DATA_LENGTH = 6;\r\nexport default class Renderer {\r\n    constructor(canvas) {\r\n        this.vertexOffset = 0;\r\n        this.indexOffset = 0;\r\n        this.textures = {};\r\n        this.vs = null;\r\n        this.fs = null;\r\n        this.program = null;\r\n        this.vec2UniformLoc = null;\r\n        this.indexBuffer = null;\r\n        this.vertBuffer = null;\r\n        this.currentBlendMode = Renderer.BLEND_MODE.NORMAL;\r\n        this.blendModes = {};\r\n        this.defaultTint = [0, 0, 0, 0];\r\n        this.canvas = canvas;\r\n        this.stage = new Node(\"stage\");\r\n        this.sceneWidth = this.canvas.width;\r\n        this.sceneHeight = this.canvas.height;\r\n        this.vertexData = new Float32Array(MAX_SPRITES * VERTEX_DATA_LENGTH);\r\n        this.indexData = new Uint16Array(MAX_SPRITES * INDEX_DATA_LENGTH);\r\n        for (let i = 0; i < MAX_SPRITES; i++) {\r\n            let index = i * INDEX_DATA_LENGTH;\r\n            let offset = i * 4;\r\n            this.indexData[index++] = offset;\r\n            this.indexData[index++] = offset + 3;\r\n            this.indexData[index++] = offset + 1;\r\n            this.indexData[index++] = offset + 2;\r\n            this.indexData[index++] = offset + 1;\r\n            this.indexData[index++] = offset + 3;\r\n        }\r\n        this.gl = this.createContext();\r\n        if (this.gl) {\r\n            this.blendModes[Renderer.BLEND_MODE.NORMAL] = [this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA];\r\n            this.blendModes[Renderer.BLEND_MODE.ADD] = [this.gl.ONE, this.gl.ONE];\r\n            this.blendModes[Renderer.BLEND_MODE.MULTIPLY] = [this.gl.DST_COLOR, this.gl.ONE_MINUS_SRC_ALPHA];\r\n            this.gl.viewport(0, 0, this.sceneWidth, this.sceneHeight);\r\n            this.gl.clearColor(0, 0, 0, 1);\r\n            this.gl.enable(this.gl.BLEND);\r\n            this.gl.blendEquation(this.gl.FUNC_ADD);\r\n            this.gl.blendFunc(this.blendModes[Renderer.BLEND_MODE.NORMAL][0], this.blendModes[Renderer.BLEND_MODE.NORMAL][1]);\r\n            this.gl.disable(this.gl.DEPTH_TEST);\r\n            this.gl.disable(this.gl.CULL_FACE);\r\n            this.gl.disable(this.gl.STENCIL_TEST);\r\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n            this.vertexShader = [\r\n                \"uniform vec2 uRatio;\",\r\n                \"attribute vec4 aPos;\",\r\n                \"attribute vec4 aTrans;\",\r\n                \"attribute vec4 aTint;\",\r\n                \"attribute vec3 aTex;\",\r\n                \"varying vec2 vTextureCoord;\",\r\n                \"varying float vAlpha;\",\r\n                \"varying vec4 vTint;\",\r\n                \"void main() {\",\r\n                \"float a = (aTrans.x * cos(aTrans.w)) * uRatio.x;\",\r\n                \"float c = (aTrans.y * sin(-aTrans.z)) * -uRatio.x;\",\r\n                \"float b = (aTrans.x * sin(aTrans.w)) * -uRatio.y;\",\r\n                \"float d = (aTrans.y * cos(aTrans.z)) * uRatio.y;\",\r\n                \"float tx = aPos.z * uRatio.x - 1.0;\",\r\n                \"float ty = aPos.w * -uRatio.y + 1.0;\",\r\n                \"mat3 outMatrix = mat3(a, b, 0.0, c, d, 0.0, tx, ty, 1.0);\",\r\n                \"gl_Position = vec4(outMatrix * vec3(aPos.xy, 1.0), 1.0);\",\r\n                \"vTextureCoord = aTex.xy;\",\r\n                \"vAlpha = aTex.z;\",\r\n                \"vTint = aTint;\",\r\n                \"}\",\r\n            ].join(\"\\n\");\r\n            this.fragmentShader = [\r\n                \"precision mediump float;\",\r\n                \"uniform sampler2D uImage;\",\r\n                \"uniform vec4 uClip;\",\r\n                \"varying vec2 vTextureCoord;\",\r\n                \"varying float vAlpha;\",\r\n                \"varying vec4 vTint;\",\r\n                \"void main() {\",\r\n                \"vec4 color = texture2D(uImage, vTextureCoord);\",\r\n                \"gl_FragColor = vec4(mix(color.rgb, vTint.rgb, vTint.a) * color.a * vAlpha, 0);\",\r\n                \"}\"\r\n            ].join(\"\\n\");\r\n            this.vs = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n            this.gl.shaderSource(this.vs, this.vertexShader);\r\n            this.gl.compileShader(this.vs);\r\n            this.fs = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n            this.gl.shaderSource(this.fs, this.fragmentShader);\r\n            this.gl.compileShader(this.fs);\r\n            this.program = this.gl.createProgram();\r\n            this.gl.attachShader(this.program, this.vs);\r\n            this.gl.attachShader(this.program, this.fs);\r\n            this.gl.linkProgram(this.program);\r\n            this.gl.useProgram(this.program);\r\n            this.vec2UniformLoc = this.gl.getUniformLocation(this.program, \"uRatio\");\r\n            this.gl.uniform2f(this.vec2UniformLoc, 2 / this.sceneWidth, 2 / this.sceneHeight);\r\n            const positionLocation = this.gl.getAttribLocation(this.program, \"aPos\");\r\n            this.gl.enableVertexAttribArray(positionLocation);\r\n            const texCoordLocation = this.gl.getAttribLocation(this.program, \"aTex\");\r\n            this.gl.enableVertexAttribArray(texCoordLocation);\r\n            const matABCDCoordLocation = this.gl.getAttribLocation(this.program, \"aTrans\");\r\n            this.gl.enableVertexAttribArray(matABCDCoordLocation);\r\n            const tintLocation = this.gl.getAttribLocation(this.program, \"aTint\");\r\n            this.gl.enableVertexAttribArray(tintLocation);\r\n            this.indexBuffer = this.gl.createBuffer();\r\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.indexData, this.gl.STATIC_DRAW);\r\n            this.vertBuffer = this.gl.createBuffer();\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertBuffer);\r\n            this.gl.vertexAttribPointer(positionLocation, 4, this.gl.FLOAT, false, VERTEX_DATA_LENGTH, 0);\r\n            this.gl.vertexAttribPointer(matABCDCoordLocation, 4, this.gl.FLOAT, false, VERTEX_DATA_LENGTH, 16);\r\n            this.gl.vertexAttribPointer(tintLocation, 4, this.gl.FLOAT, false, VERTEX_DATA_LENGTH, 32);\r\n            this.gl.vertexAttribPointer(texCoordLocation, 3, this.gl.FLOAT, false, VERTEX_DATA_LENGTH, 48);\r\n        }\r\n    }\r\n    resize(width, height) {\r\n        if (this.sceneWidth !== width || this.sceneHeight !== height) {\r\n            this.sceneWidth = this.canvas.width = width;\r\n            this.sceneHeight = this.canvas.height = height;\r\n            if (this.gl) {\r\n                this.gl.viewport(0, 0, this.sceneWidth, this.sceneHeight);\r\n                if (this.vec2UniformLoc) {\r\n                    this.gl.uniform2f(this.vec2UniformLoc, 2 / this.sceneWidth, 2 / this.sceneHeight);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    createContext() {\r\n        const names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\r\n        let context = null;\r\n        for (let i = 0; i < names.length; i++) {\r\n            context = this.canvas.getContext(names[i], { alpha: false, premultipliedAlpha: false });\r\n            if (context) {\r\n                break;\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    addTexture(image) {\r\n        if (!image.id) {\r\n            console.warn(\"no texture id\", image);\r\n        }\r\n        if (!this.gl) {\r\n            console.warn(\"addTexture error: no webgl contex\");\r\n            return;\r\n        }\r\n        if (!this.textures[image.id]) {\r\n            const texture = this.gl.createTexture();\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n            this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n            this.textures[image.id] = texture;\r\n        }\r\n        else {\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[image.id]);\r\n        }\r\n    }\r\n    present() {\r\n        if (!this.gl) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.stage.children.length; i++) {\r\n            this.draw(this.stage.children[i]);\r\n        }\r\n        this.drawTriangles();\r\n    }\r\n    draw(sprite, alpha, tint, blend, poked) {\r\n        if (!sprite.visible) {\r\n            return;\r\n        }\r\n        alpha = (alpha || 1) * sprite.alpha;\r\n        tint = sprite.getTint() || tint || this.defaultTint;\r\n        blend = sprite.getBlendMode() || blend || Renderer.BLEND_MODE.NORMAL;\r\n        poked = sprite.updateGlobalTransform(poked);\r\n        const texture = sprite.getTexture();\r\n        if (texture) {\r\n            if (this.currentTexture !== texture) {\r\n                this.drawTriangles();\r\n                this.addTexture(texture);\r\n                this.currentTexture = texture;\r\n            }\r\n            if (this.indexOffset >= this.indexData.length) {\r\n                this.drawTriangles();\r\n            }\r\n            if (this.currentBlendMode !== blend) {\r\n                this.drawTriangles();\r\n                if (this.blendModes[blend]) {\r\n                    this.currentBlendMode = blend;\r\n                }\r\n                else {\r\n                    console.warn(`blend mode error: \\\"${blend}\\\" is not valid blend mode.`);\r\n                    this.currentBlendMode = Renderer.BLEND_MODE.NORMAL;\r\n                }\r\n                const blendMode = this.blendModes[this.currentBlendMode];\r\n                if (blendMode.length > 2) {\r\n                    this.gl.blendFuncSeparate(blendMode[0], blendMode[1], blendMode[2], blendMode[3]);\r\n                }\r\n                else {\r\n                    this.gl.blendFunc(blendMode[0], blendMode[1]);\r\n                }\r\n            }\r\n            const mesh = sprite.getMesh();\r\n            const vertexes = mesh.vertexes;\r\n            const uv = mesh.uv;\r\n            const tr = sprite.transform.global;\r\n            for (let i = 0; i < vertexes.length; i += 2) {\r\n                this.vertexData[this.vertexOffset++] = vertexes[i];\r\n                this.vertexData[this.vertexOffset++] = vertexes[i + 1];\r\n                this.vertexData[this.vertexOffset++] = tr.x;\r\n                this.vertexData[this.vertexOffset++] = tr.y;\r\n                this.vertexData[this.vertexOffset++] = tr.scaleX;\r\n                this.vertexData[this.vertexOffset++] = tr.scaleY;\r\n                this.vertexData[this.vertexOffset++] = tr.skewX;\r\n                this.vertexData[this.vertexOffset++] = tr.skewY;\r\n                this.vertexData[this.vertexOffset++] = tint[0];\r\n                this.vertexData[this.vertexOffset++] = tint[1];\r\n                this.vertexData[this.vertexOffset++] = tint[2];\r\n                this.vertexData[this.vertexOffset++] = tint[3];\r\n                this.vertexData[this.vertexOffset++] = uv[i];\r\n                this.vertexData[this.vertexOffset++] = uv[i + 1];\r\n                this.vertexData[this.vertexOffset++] = alpha;\r\n            }\r\n            this.indexOffset += INDEX_DATA_LENGTH;\r\n        }\r\n        for (let i = 0; i < sprite.children.length; i++) {\r\n            this.draw(sprite.children[i], alpha, tint, blend, poked);\r\n        }\r\n    }\r\n    drawTriangles() {\r\n        if (!this.gl) {\r\n            return;\r\n        }\r\n        if (this.indexOffset > 0) {\r\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexOffset), this.gl.STATIC_DRAW);\r\n            this.gl.drawElements(this.gl.TRIANGLES, this.indexOffset, this.gl.UNSIGNED_SHORT, 0);\r\n        }\r\n        this.vertexOffset = 0;\r\n        this.indexOffset = 0;\r\n    }\r\n}\r\nRenderer.BLEND_MODE = {\r\n    NORMAL: \"normal\",\r\n    ADD: \"add\",\r\n    MULTIPLY: \"multiply\"\r\n};\r\n","export default class Timer {\r\n    constructor(cb) {\r\n        this.onEnterFrame = cb;\r\n        this.oldTime = Date.now();\r\n        return this;\r\n    }\r\n    start() {\r\n        this.oldTime = Date.now();\r\n        this.onRequestAnimationFrame();\r\n    }\r\n    stop() {\r\n        cancelAnimationFrame(this.requestAnimationFrameId);\r\n    }\r\n    onRequestAnimationFrame() {\r\n        const delta = Date.now() - this.oldTime;\r\n        this.requestAnimationFrameId = requestAnimationFrame(this.onRequestAnimationFrame.bind(this));\r\n        this.oldTime += delta;\r\n        this.onEnterFrame(delta);\r\n    }\r\n}\r\n"],"names":["Transform","[object Object]","this","x","y","scaleX","scaleY","skewX","skewY","rotation","matrix","a","b","c","d","tx","ty","matrixUpdated","equalScale","noScale","equalSkew","noSkew","Math","cos","sin","local","global","posX","posY","updateMatrix","m1","m2","sqrt","atan2","updateInfo","target","Node","id","transform","globalTransformUpdated","children","hierarchy","parent","name","value","poke","PI","node","removeChild","updateHierarchy","push","i","length","splice","unshift","poked","updateGlobalTransform","pokeChildren","updateTransformData","concat","copy","forEach","Sprite","texture","frame","super","bounds","anchor","mesh","display","visible","alpha","setTexture","width","rect","height","min","max","anchorX","meshUpdated","anchorY","blend","color","r","g","undefined","tint","img","setFrame","boundsUpdated","updateMesh","offsetX","offsetY","vertexes","uv0","uv1","uv2","uv3","uv","w","h","vec1X","vec1Y","vec2X","vec2Y","vec3X","vec3Y","minX","minY","maxX","maxY","updateHierarchyGlobalTransform","updateBounds","Renderer","canvas","vertexOffset","indexOffset","textures","vs","fs","program","vec2UniformLoc","indexBuffer","vertBuffer","currentBlendMode","BLEND_MODE","NORMAL","blendModes","defaultTint","stage","sceneWidth","sceneHeight","vertexData","Float32Array","MAX_SPRITES","indexData","Uint16Array","index","offset","gl","createContext","ONE","ONE_MINUS_SRC_ALPHA","ADD","MULTIPLY","DST_COLOR","viewport","clearColor","enable","BLEND","blendEquation","FUNC_ADD","blendFunc","disable","DEPTH_TEST","CULL_FACE","STENCIL_TEST","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","vertexShader","join","fragmentShader","createShader","VERTEX_SHADER","shaderSource","compileShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getUniformLocation","uniform2f","positionLocation","getAttribLocation","enableVertexAttribArray","texCoordLocation","matABCDCoordLocation","tintLocation","createBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","ARRAY_BUFFER","vertexAttribPointer","FLOAT","names","context","getContext","premultipliedAlpha","image","console","warn","bindTexture","TEXTURE_2D","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","draw","drawTriangles","sprite","getTint","getBlendMode","getTexture","currentTexture","addTexture","blendMode","blendFuncSeparate","getMesh","tr","subarray","drawElements","TRIANGLES","UNSIGNED_SHORT","Timer","cb","onEnterFrame","oldTime","Date","now","onRequestAnimationFrame","cancelAnimationFrame","requestAnimationFrameId","delta","requestAnimationFrame","bind"],"mappings":"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"}